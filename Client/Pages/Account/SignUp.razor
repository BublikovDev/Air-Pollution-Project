@page "/signUp"
@using Client.Static
@using Shared.Models.Auth.Requests
@inject IJSRuntime _jsRuntime


<div class="container-fluid sign-up">
    <div class="row">
        <div class="col-12 center-block">
            <img src="/wwwroot/Brand_name.svg">
        </div>
    </div>
    <div class="row sign-up-form">
        <div class="col mt-5">
            <div class="row">
                <div class="col-12 center-block">
                    <h2>Register</h2>
                </div>
            </div>
            <EditForm Model="_user" OnValidSubmit="SignUpUser">
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-12 center-block mt-3">
                        <input @bind-value="_user.Email" type="email" placeholder="Email" class="inputSignUp">
                    </div>
                    <div class="col-12 center-block mt-3">
                        <input @bind-value="_user.Password" type="password" placeholder="Password" class="inputSignUp">
                    </div>
                    <div class="col-12 center-block mt-3">
                        <input @bind-value="repeatPassword" type="password" placeholder="Repeat Password" class="inputSignUp">
                    </div>

                    <div class="col-12 center-block mt-3">
                        <button type="submit" class="btn">Create my account</button>
                    </div>
                    <div class="col-12 center-block mt-3">
                        <p><a href="/signin">Do you already have an account?</a></p>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>



@code {
    [Inject] HttpClient HttpClient { get; set; }
    [Inject] NavigationManager NavigationManager { get; set; }
    private SignUpRequest _user = new();
    private string repeatPassword;
    private async Task SignUpUser()
    {
        _user.Role = "User";
        var response = await HttpClient.PostAsJsonAsync<SignUpRequest>(APIEndpoints.s_signUp, _user);

        if (response.IsSuccessStatusCode == false)
        {
            NavigationManager.NavigateTo("/signup");
        }
        else
        {
			NavigationManager.NavigateTo("/signin");
		}
	}
}
