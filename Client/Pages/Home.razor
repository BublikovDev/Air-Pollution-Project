@page "/"
@using Client.Static
@using Shared.Models.Map

<PageTitle>Home</PageTitle>

@inject IJSRuntime JS

<div id="map" style="height:90vh;width:100%;"></div>

@code {
    [Inject] HttpClient HttpClient { get; set; }

    Country _country;
    bool _isDataLoaded =false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                //create aqi on service
                //choose aqi below
                //
                await LoadData();
                if(_country!=null)
                {
                    await JS.InvokeVoidAsync("initialize", null);
                    StateHasChanged();
                    foreach (var item in _country.Locations)
                    {
                        await JS.InvokeVoidAsync("addMarkers", item.Latitude, item.Longitude, item.Sensors.FirstOrDefault(s => s.Name == "pm25 µg/m³").Value);
                    }

                    StateHasChanged();
                }
                else
                {
                    throw new Exception("Empty data");
                }
            }
            catch(Exception ex)
            {
                var a = 0;
            }

        }
    }

    protected async Task LoadData()
    {
        try
        {
            _country = await HttpClient.GetFromJsonAsync<Country>(string.Format(APIEndpoints.s_getData, 119));
            _isDataLoaded = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {

        }
    }
}
