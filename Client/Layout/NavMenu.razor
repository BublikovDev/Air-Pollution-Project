@using Blazored.LocalStorage
@using Client.Providers
@using Microsoft.AspNetCore.Components.Authorization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-map-fill-nav-menu" aria-hidden="true"></span> Map
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/profile">
                <span class="bi bi-account-fill-nav-menu" aria-hidden="true"></span> Account
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link">
                <span class="bi bi-analytics-fill-nav-menu" aria-hidden="true"></span> Analytics
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link">
                <span class="bi bi-info-fill-nav-menu" aria-hidden="true"></span> Info
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link">
                <span class="bi bi-info-fill-nav-menu" aria-hidden="true"></span> About
            </NavLink>
        </div
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="SignOut">
                <span class="bi bi-logout-fill-nav-menu" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
    </nav>
</div>

@code {
    [Inject] NavigationManager NavigationManager { get; set; }
    [Inject] ILocalStorageService LocalStorageService { get; set; }
    [Inject] AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    private bool collapseNavMenu = true;
    private bool display_nav = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private async Task SignOut()
    {
        if (await LocalStorageService.ContainKeyAsync("bearerToken"))
        {
            await LocalStorageService.RemoveItemAsync("bearerToken");

            ((AppAuthenticationStateProvider)AuthenticationStateProvider).SignOut();

            StateHasChanged();

            NavigationManager.NavigateTo("/");
        }
    }
}
